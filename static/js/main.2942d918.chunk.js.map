{"version":3,"sources":["App.js","index.js"],"names":["buttonStyle","css","transparentTheme","EditorView","theme","backgroundColor","height","syntaxHighlighting","HighlightStyle","define","tag","tags","heading1","fontSize","fontWeight","heading2","heading3","App","useState","Markdown","setMarkdown","className","onClick","localStorage","setItem","value","getItem","extensions","markdown","base","markdownLanguage","codeLanguages","languages","addKeymap","oneDark","defaultHighlightStyle","fallback","lineWrapping","onChange","valueUpdate","render","document","getElementById"],"mappings":"gQAaMA,EAAcC,YAAH,2EAKXC,EAAmBC,IAAWC,MAAM,CACxC,IAAK,CACHC,gBAAiB,yBACjBC,OAAQ,UAINC,EAAqBC,IAAeC,OAAO,CAC/C,CACEC,IAAKC,IAAKC,SACVC,SAAU,QACVC,WAAY,QAEd,CACEJ,IAAKC,IAAKI,SACVF,SAAU,QACVC,WAAY,QAEd,CACEJ,IAAKC,IAAKK,SACVH,SAAU,QACVC,WAAY,UAqCDG,EAjCH,WACV,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAKA,OACE,mBAAKC,UAAU,SAAf,UAEE,sBAAQC,QAAS,WACfC,aAAaC,QAAQ,WAAYL,IAChClB,IAAKD,EAFR,kBAIA,YAAC,IAAD,CACEyB,MAAOF,aAAaG,QAAQ,aAAe,kBAC3CC,WAAY,CACVC,mBAAS,CACPC,KAAMC,mBACNC,cAAeC,IACfC,WAAW,IAEbC,IACAC,IAAsBC,SACtB7B,EACAL,EACAC,IAAWkC,cAEbC,SAxBW,SAACb,EAAOc,GACvBnB,EAAYK,U,QC1ChBe,iBAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2942d918.chunk.js","sourcesContent":["/** @jsxImportSource @emotion/react */\n\nimport CodeMirror from '@uiw/react-codemirror';\nimport { markdown, markdownLanguage } from '@codemirror/lang-markdown'\nimport { languages } from '@codemirror/language-data'\nimport { oneDark } from '@codemirror/theme-one-dark'\nimport { defaultHighlightStyle, HighlightStyle, tags } from '@codemirror/highlight'\nimport { EditorView } from '@codemirror/view'\nimport { useState } from \"react\"\nimport { css } from \"@emotion/react\"\n\nimport \"./index.css\"\n\nconst buttonStyle = css`\n  background-color: #2e2e2e;\n  color: azure;\n`\n\nconst transparentTheme = EditorView.theme({\n  '&': {\n    backgroundColor: 'transparent !important',\n    height: '100%'\n  }\n})\n\nconst syntaxHighlighting = HighlightStyle.define([\n  {\n    tag: tags.heading1,\n    fontSize: '1.8em',\n    fontWeight: 'bold'\n  },\n  {\n    tag: tags.heading2,\n    fontSize: '1.4em',\n    fontWeight: 'bold'\n  },\n  {\n    tag: tags.heading3,\n    fontSize: '1.2em',\n    fontWeight: 'bold'\n  }\n])\n\nconst App = () => {\n  const [Markdown, setMarkdown] = useState(\"\")\n  \n  const onChange = (value, valueUpdate) => {\n    setMarkdown(value)\n  }\n  return (\n    <div className=\"editor\">\n\n      <button onClick={() => {\n        localStorage.setItem('markdown', Markdown)\n      }} css={buttonStyle}>Save</button>\n\n      <CodeMirror\n        value={localStorage.getItem(\"markdown\") || \"# Hello, World!\"}\n        extensions={[\n          markdown({\n            base: markdownLanguage,\n            codeLanguages: languages,\n            addKeymap: true,\n          }),\n          oneDark,\n          defaultHighlightStyle.fallback,\n          syntaxHighlighting,\n          transparentTheme,\n          EditorView.lineWrapping\n        ]}\n        onChange={onChange}\n      />\n    </div>\n  );\n}\n\nexport default App","import React from \"react\"\nimport { render } from \"react-dom\"\n\nimport App from \"./App.js\"\n\nrender(<App />, document.getElementById(\"root\"))"],"sourceRoot":""}